import pytest
from delta import *

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ tokenize
def test_1():
    text = "üèÜ–ü–æ–∫–æ—Ä—è–µ–º    –≤–µ—Ä—à–∏–Ω—É !! [club202446718|¬´–¢–µ—Ö–Ω–æ–û–ª–∏–º–ø–∞¬ª]...     "
    result = tokenize(text)
    assert result == ['–ø–æ–∫–æ—Ä—è–µ–º', '–≤–µ—Ä—à–∏–Ω—É', 'club202446718', '—Ç–µ—Ö–Ω–æ–æ–ª–∏–º–ø–∞']

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ tokenize –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—Ö–æ–¥
def test_2():
    text = 255
    with pytest.raises(AttributeError):
        tokenize(text)

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ create_inverted_index
def test_3():
    result = create_inverted_index("test_files/very_small_file.csv")
    true =  {'–ø–æ–∫–æ—Ä—è–µ–º': {4293}, '–≤–µ—Ä—à–∏–Ω—É': {4293}, 'club202446718': {4293}, 
                     '—Ç–µ—Ö–Ω–æ–æ–ª–∏–º–ø–∞': {4293}, '–º—ã': {2447, 4293, 10543}, '–∫–∞—Ä—Ç–æ—á–∫–∏–≤–æ–∂–∞—Ç–æ–≥–æ': {10543}, 
                     '–≤–æ': {10543}, '–≤—Ç–æ—Ä–Ω–∏–∫': {10543}, '—É–∑–Ω–∞–ª–∏': {10543}, '—Å–æ–±—Ä–∞–Ω–∏–µ': {2447}, 
                     'english': {2447}, 'word': {2447}}
    assert result == true

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ create_inverted_index –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—Ö–æ–¥ - –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
def test_4():
    with pytest.raises(FileNotFoundError):
        create_inverted_index("test_files/no_existing_file.csv") 

# # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ create_inverted_index –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—Ö–æ–¥ - —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∏
def test_5():
    with pytest.raises(OSError):
        create_inverted_index(23534)

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ delta_encode_bitvector
def test_6():
    numbers = [7, 17]
    res = "0111100100010"
    assert str(delta_encode_bitvector(numbers)) == res

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ delta_encode_bitvector –Ω–∞ –Ω–µ–≤–µ—Ä–Ω—ã–π –≤—Ö–æ–¥
def test_7():
    numbers = "ha-ha"
    with pytest.raises(TypeError):
        delta_encode_bitvector(numbers)

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ create_inverted_index –Ω–∞ –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª
def test_8():
    result = create_inverted_index("test_files/empty_file.csv")
    assert len(result) == 0

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ create_inverted_index –Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–∞–π–ª (–±–µ–∑ –ø–æ–ª—è text)
def test_9():
    with pytest.raises(KeyError):
        create_inverted_index("test_files/uncorrect_file.csv")

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ delta_decode_bitvector
def test_10():
    numbers = [7, 17]
    enc_numbers = delta_encode_bitvector(numbers)
    res = [7, 17]
    assert delta_decode_bitvector(enc_numbers) == res

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ delta_decode_bitvector –Ω–∞ –Ω–µ–≤–µ—Ä–Ω—ã–π –≤—Ö–æ–¥
def test_11():
    numbers = "ha-ha"
    with pytest.raises(AttributeError):
        delta_decode_bitvector(numbers)

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ delta_decode_bitvector_compressed
def test_12():
    inverted_index = create_inverted_index("test_files/very_small_file.csv")
    delta_compressed_index = delta_encode_bitvector_compressed(inverted_index)
    res = delta_decode_bitvector_compressed(delta_compressed_index)
    print(res)
    true = {'–ø–æ–∫–æ—Ä—è–µ–º': [4293], '–≤–µ—Ä—à–∏–Ω—É': [4293], 'club202446718': [4293], '—Ç–µ—Ö–Ω–æ–æ–ª–∏–º–ø–∞': [4293], 
            '–º—ã': [2447, 4293, 10543], '–∫–∞—Ä—Ç–æ—á–∫–∏–≤–æ–∂–∞—Ç–æ–≥–æ': [10543], '–≤–æ': [10543], '–≤—Ç–æ—Ä–Ω–∏–∫': [10543], 
            '—É–∑–Ω–∞–ª–∏': [10543], '—Å–æ–±—Ä–∞–Ω–∏–µ': [2447], 'english': [2447], 'word': [2447]}
    assert res == true

# –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ create_inverted_index –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª (500 –ú–±)
def test_13():
    result = create_inverted_index("test_files/very_big_file.csv")
    assert len(result) == 805866